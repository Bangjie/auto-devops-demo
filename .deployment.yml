apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: $CI_KUBE_NAME
  namespace: $KUBE_NAMESPACE
  labels:
    app: $CI_ENVIRONMENT_SLUG
    track: "$CI_KUBE_TRACK"
    version: "$CI_PIPELINE_ID-$CI_JOB_ID"
spec:
  replicas: $CI_KUBE_REPLICAS
  template:
    metadata:
      labels:
        name: $CI_KUBE_NAME
        app: $CI_ENVIRONMENT_SLUG
        track: "$CI_KUBE_TRACK"
    spec:
      containers:
      - name: app
        image: $CI_APPLICATION_REPOSITORY:$CI_APPLICATION_TAG
        imagePullPolicy: IfNotPresent
        ports:
        - name: web
          containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: $CI_ENVIRONMENT_SLUG
  namespace: $KUBE_NAMESPACE
  labels:
    app: $CI_ENVIRONMENT_SLUG
    version: "$CI_PIPELINE_ID-$CI_JOB_ID"
spec:
  ports:
  - name: web
    port: 80
    targetPort: web
  selector:
    app: $CI_ENVIRONMENT_SLUG
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: $CI_ENVIRONMENT_SLUG
  namespace: $KUBE_NAMESPACE
  labels:
    app: $CI_ENVIRONMENT_SLUG
    version: "$CI_PIPELINE_ID-$CI_JOB_ID"
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    kubernetes.io/tls-acme: "true"
    # kubernetes.io/ingress.class: "nginx"
spec:
  tls:
  - hosts:
    - $CI_KUBE_HOSTNAME
    secretName: ${CI_ENVIRONMENT_SLUG}-tls
  rules:
  - host: $CI_KUBE_HOSTNAME
    http:
      paths:
      - path: /
        backend:
          serviceName: $CI_ENVIRONMENT_SLUG
          servicePort: 80
